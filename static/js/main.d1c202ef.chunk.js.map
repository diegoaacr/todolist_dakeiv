{"version":3,"sources":["components/Header.js","components/AddHomework.js","components/Homework.js","components/ListHomework.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","titulo","react_default","a","createElement","className","duplaState","homework","name","description","error","AddHomework","state","onChangeForm","e","Object","objectSpread","_this","defineProperty","target","value","setState","onSubmitForm","preventDefault","_this$state$homework","id","uuid","props","getHomework","this","onSubmit","type","placeholder","onChange","Component","Homework","deleteHomework","onClick","ListHomework","_this$props","homeworks","map","components_Homework","key","App","concat","toConsumableArray","filter","num","homeworksLS","localStorage","getItem","JSON","parse","setItem","stringify","components_Header","AddHomework_AddHomework","ListHomework_ListHomework","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1c202ef.chunk.js","sourcesContent":["import React from 'react';\nimport './../css/Header.css'\n\nconst Header = ({titulo}) => {\n\treturn (\n\t\t<div className=\"Header\">\n\t\t\t<h1>{titulo}</h1>\n\t\t</div>\n\t);\n};\n\nexport default Header;","import React, { Component } from 'react'\nimport uuid from 'uuid'\nimport './../css/AddHomework.css'\n\nlet duplaState ={\n\thomework : {\n\t\t\tname: '',\n\t\t\tdescription:''\n\t\t},\n\n\terror: false\n}\n\nexport default class AddHomework extends Component {\n\n\tstate = { ...duplaState}\n\n\tonChangeForm = (e) => {\n\t\t\n\t\tlet homework = {\n\t\t\t...this.state.homework,\n\t\t\t[e.target.name] : e.target.value\n\t\t}\n\n\t\tthis.setState({homework})\n\t}\n\n\n\tonSubmitForm = (e) => {\n\t\te.preventDefault();\n\n\t\t//Validar formulario\n\t\tconst {name,description} = this.state.homework\n\n\t\tif(name === '' || description === ''){\n\t\t\t\tthis.setState({\n\t\t\t\terror:true\n\t\t\t})\n\t\t\t\n\t\t\t\treturn;\n\t\t}\n\n\t\t//Agregar ID Dinamico\n\t\tlet newHomework = this.state.homework\n\t\tnewHomework.id = uuid()\n\n\t\t//enviar tarea al APP\n\t\tthis.props.getHomework(this.state.homework)\n\n\t\t//Vaciar formulario\n\t\tthis.setState({...duplaState})\n\t\t\n\n\n\t\t\n\t}\n\n\trender() {\n\t\tconst {error} = this.state\n\t\treturn (\n\t\t\t<div className=\"AddHomework\">\n\t\t\t\t<h2>Agregar Nueva Tarea</h2>\n\n\t\t\t\t<form onSubmit={this.onSubmitForm}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label>Ingrese el nombre: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Nombre\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tvalue={this.state.homework.name}\n\t\t\t\t\t\t\tonChange={this.onChangeForm}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label>Ingrese la tarea: </label>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Tarea\"\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tvalue={this.state.homework.description}\n\t\t\t\t\t\t\tonChange={this.onChangeForm}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input type=\"submit\" value=\"enviar\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{error ? <p className=\"Danger\">Ingrese todos los campos obligatorios</p> : ''}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react';\nimport './../css/Homework.css'\n\nconst Homework = ({name,description,deleteHomework,id}) => {\n\treturn (\n\t\t<div className=\"Homework\">\n\t\t\t<p>{name}</p>\n\t\t\t<p>{description}</p>\n\t\t\t<button onClick={ () => deleteHomework(id)}>Eliminar</button>\n\t\t</div>\n\t);\n};\n\nexport default Homework;","import React, { Component } from 'react'\nimport Homework from './Homework'\nimport './../css/ListHomework.css'\n\nexport default class ListHomework extends Component {\n\trender() {\n\t\tconst {homeworks,deleteHomework} = this.props\n\t\t\n\t\treturn (\n\t\t\t<div className=\"ListHomework\">\n\t\t\t\t{\n\t\t\t\t\thomeworks.map(homework => (\n\t\t\t\t\t\t<Homework \n\t\t\t\t\t\t\tkey={homework.id}\n\t\t\t\t\t\t\tid={homework.id}\n\t\t\t\t\t\t\tname = {homework.name}\n\t\t\t\t\t\t\tdescription = {homework.description}\n\t\t\t\t\t\t\tdeleteHomework = {deleteHomework}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport Header from './components/Header'\nimport AddHomework from './components/AddHomework'\nimport ListHomework from './components/ListHomework'\n\n\nexport default class App extends Component {\n  state = {\n    homeworks:[]\n  }\n\n\ncomponentDidMount(){\n  const homeworksLS = localStorage.getItem('homeworks')\n\n    if(homeworksLS){\n      this.setState({\n        homeworks: JSON.parse(homeworksLS)\n      })\n    }\n}\n\n\n  componentDidUpdate() {\n    localStorage.setItem('homeworks',JSON.stringify(this.state.homeworks))\n  }\n\n\n  getHomework = (homework) => {\n    let homeworks = [...this.state.homeworks,homework]\n\n    this.setState({homeworks})\n\n  }\n\n  deleteHomework = (id) => {\n  \n    let copiaState = [...this.state.homeworks]\n\n    let homeworks = copiaState.filter(num => num.id !== id)\n\n    this.setState({homeworks})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header \n          titulo='TodoList Dakeiv'\n        />\n\n      <div className=\"App-Body\"> \n        <AddHomework \n          getHomework = {this.getHomework}\n        />\n\n\n        <ListHomework \n          homeworks= {this.state.homeworks}\n          deleteHomework = {this.deleteHomework}\n        />\n      </div>\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}